swagger: "2.0"
info:
  version: 0.0.0
  title: "LinkedPipes ETL : Frontend"
  description: This document describes the HTTP API of the LinkedPipes ETL Frontned component. This component include the HTTP API of Executor-Monitor - this API is NOT documented here.
  contact:
    name: ""
  license:
    name: MIT
basePath: /
schemes:
  - http
paths:
  /resources/components:
    get:
      description: List of all components.
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    post:
      description: Create new component.
      parameters:
        - name: component
          in: formData
          description: Component definition.
          type: file
        - name: configuration
          in: formData
          description: Component configuration.
          type: file
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: OK
  "/resources/components/{id}":
    get:
      description: Component definition.
      parameters:
        - name: id
          in: path
          description: Component ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
        "503":
          description: Backend is offline.
    delete:
      description: Delete given component.
      parameters:
        - name: id
          in: path
          description: Component ID.
          required: true
          type: string
      responses:
        "200":
          description: OK
  "/resources/components/{id}/definition":
    get:
      description: Definition of given component.
      parameters:
        - name: id
          in: path
          description: Component ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
        "503":
          description: Backend is offline.

  /resources/pipelines:
    get:
      description: List of all pipelines.
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    post:
      description: Create and return new empty pipeline.
      parameters:
        - name: options
          in: formData
          description: Options.
          type: file
          required: false
        - name: pipeline
          in: formData
          description: Pipeline definition.
          type: file
          required: false
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: OK
  /resources/pipelines/localize:
    post:
      description: Update definition of pipeline based on given options and return it. Such pipeline has IRI of this instance.
      parameters:
        - name: options
          in: formData
          description: Options.
          type: file
          required: false
        - name: pipeline
          in: formData
          description: Pipeline definition.
          type: file
          required: false
      consumes:
        - multipart/form-data
      responses:
        '200':
          description: OK
  "/resources/pipelines/{id}":
    get:
      description: Pipeline definition.
      parameters:
        - name: id
          in: path
          description: Pipeline ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    delete:
      description: Delete pipeline.
      parameters:
        - name: id
          in: path
          description: Pipeline ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    put:
      description: Update pipeline definition.
      parameters:
        - name: id
          in: path
          description: Pipeline ID.
          required: true
          type: string
        - name: unchecked
          in: query
          description: If true update IRIs to suite pipeline IRI.
          required: false
          type: boolean
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  /resources/executions:
    get:
      description: List of all executions.
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    post:
      description: Create a new execution. The pipeline must be specified via query of body parametr.
      parameters:
        - name: pipeline
          in: query
          description: Pipeline IRI. Used if the request is not of type multipart/form-data.
          required: false
          type: string
        - name: input
          in: formData
          description: "Multiple input files"
          required: false
          type: file
        - name: pipeline
          in: formData
          description: Pipeline definition.
          required: false
          type: file
      consumes:
        - multipart/form-data
        - undefined
      responses:
        "200":
          description: OK
          schema:
            $ref : "#/definitions/CreatedExecution"
  "/resources/executions/{id}":
    get:
      description: Execution.
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    delete:
      description: Delete execution.
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/resources/executions/{id}/cancel":
    post:
      description: Request cancell of running pipeline.
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: integer
          format: int
      responses:
        "200":
          description: Cancell request accepted.
        "404":
          description: There is no running execution.
  "/resources/executions/{id}/logs":
    get:
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: integer
          format: int
      produces:
        - text/plain
      description: Return log file of the execution.
      responses:
        "200":
          description: OK
        "404":
          description: Missing resource.
  "/resources/executions/{id}/pipeline":
    get:
      description: Return definition of pipeline as used to create the execution.
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: integer
          format: int
      produces:
        - application/rdf+xml
        - application/n-triples
        - text/turtle
        - text/n3
        - application/trix
        - application/trig
        - application/n-quads
        - application/ld+json
        - application/rdf+json
        - application/xhtml+xml
      responses:
        "200":
          description: OK
  "/resources/executions/{id}/overview":
    get:
      description: Overview of given execution.
      parameters:
        - name: id
          in: path
          description: Execution ID.
          required: true
          type: integer
          format: int
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ExecutionOverview"
        "404":
          description: There is no running execution.


  "/api/v1/components/interface":
    get:
      description: Component interface.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/definition":
    get:
      description: Component definition.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/effective":
    get:
      description: Effective configuration, is configuration the component will used in runtime.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/config":
    get:
      description: Configuration as provided by the user.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
    post:
      description: Set component configuration.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
        - in: body
          name: configuration
          description: New configuration.
          schema:
            type: object
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/configTemplate":
    get:
      description: Configuration as should be set to a new instance of a component.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/configDescription":
    get:
      description: Configuration description.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/static":
    get:
      description: Configuration description.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
        - name: file
          in: query
          description: Name of static file to server.
          required: true
          type: string
      responses:
        "200":
          description: OK
  "/api/v1/components/dialog":
    get:
      description: Configuration description.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
        - name: file
          in: query
          description: Name of dialog's file.
          required: true
          type: string
        - name: name
          in: query
          description: Name of the dialog.
          required: true
          type: string
      responses:
        "200":
          description: OK
  "/api/v1/jars/file":
    get:
      description: Return JAR file of given component.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
      responses:
        "200":
          description: OK
  "/api/v1/components/component":
    post:
      description: Update component definition.
      parameters:
        - name: iri
          in: query
          description: Component IRI.
          required: true
          type: string
        - name: component
          in: body
          description: Component definition.
          schema:
            type: object
      produces:
        - application/ld+json
      responses:
        "200":
          description: OK
  "/api/v1/components/usage":
    get:
      description: Return information about component use in pipelines.
      produces:
        - application/rdf+xml
        - application/n-triples
        - text/turtle
        - text/n3
        - application/trix
        - application/trig
        - application/n-quads
        - application/ld+json
        - application/rdf+json
        - application/xhtml+xml
      responses:
        "200":
          description: OK

definitions:
  CreatedExecution:
    type: object
    title: Reference to new execution.
    properties:
      iri:
        type: string
        description: Execution IRI.
  ExecutionOverview:
    type: object
    title: Execution overview.
    properties:
      pipeline:
        type: object
        properties:
          "@id":
            type: string
      execution:
        type: object
        properties:
          "@id":
            type: string
      executionStarted:
        type: string
      executionFinished:
        type: string
      status:
        type: object
        properties:
          "@id":
            type: string
      lastChange:
        type: string
      pipelineProgress:
        type: object
        properties:
          "@id":
            type: string
          total:
            type: integer
          current:
            type: integer

